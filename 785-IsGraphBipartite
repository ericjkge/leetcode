# Last updated: 8/4/2025, 11:12:48 PM
class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        colors = {}
        
        def dfs(node):
            for neighbor in graph[node]:
                if neighbor not in colors:
                    colors[neighbor] = not colors[node]
                    if not dfs(neighbor):
                        return False
                elif colors[neighbor] == colors[node]:
                    return False
            return True
        
        for i in range(len(graph)):
            if i not in colors:
                colors[i] = True
                if not dfs(i):
                    return False
        return True